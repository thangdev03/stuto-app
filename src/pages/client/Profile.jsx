import { FaArrowRight, FaEarthAsia, FaMapPin, FaRegComment, FaRegPaperPlane } from "react-icons/fa6";
import { FaUserCheck } from "react-icons/fa";
import { MdPersonAddAlt1 } from "react-icons/md";
import { HiOutlineDotsHorizontal } from "react-icons/hi";
import { RiUserForbidLine } from "react-icons/ri";
import { MdOutlineReport } from "react-icons/md";
import { BsDot, BsThreeDots, BsFillPersonXFill } from "react-icons/bs";
import { AiOutlineLike } from "react-icons/ai";
import FriendsList from "../../components/FriendsList";
import { useEffect, useState, useRef } from "react";
import { useParams } from "react-router-dom";
import { cancelInvitation, getInvitation, acceptInvitation, unfriend } from "../../utils/friendsHandler";
import { getAge } from "../../utils/getAge";
import InvitationModal from "../../components/InvitationModal";
import UploadWidget from "../../components/UploadWidget";
import AvatarImage from "../../components/AvatarImage";
import { cloudName, uploadPreset, cld } from "../../services/const";

function Profile() {
    const [openUserActions, setOpenUserActions] = useState(false);
    const [openInvitation, setOpenInvitation] = useState(false);
    const [userData, setUserData] = useState(null);
    const [inviteTarget, setInviteTarget] = useState(null);
    const [inviteMessage, setInviteMessage] = useState("Ch√†o b·∫°n, m√¨nh c√≥ th·ªÉ c√πng h·ªçc v·ªõi b·∫°n ƒë∆∞·ª£c kh√¥ng? M√¨nh c≈©ng ƒëang h·ªçc m√¥n n√†y ü•∞");
    const [userAge, setUserAge] = useState(0);
    const [friends, setFriends] = useState([]);
    const [requestSenders, setRequestSenders] = useState([]);
    const [requestReceivers, setRequestReceivers] = useState([]);
    const [isFriend, setIsFriend] = useState(false);
    const [isSentRequest, setIsSentRequest] = useState(false);
    const [openActions, setOpenActions] = useState(false);
    const [isOpenResponse, setIsOpenResponse] = useState(false);
    const [isResponse, setIsResponse] = useState(false);
    const [isAccept, setIsAccept] = useState(false);
    const { userId } = useParams();
    const currAuthUser = JSON.parse(localStorage.getItem("user"))
    const [publicId, setPublicId] = useState("");
    let isCurrUser = (userId === currAuthUser.id) ? true : false;
    let boxRef = useRef();

    const [uwConfig] = useState({
        cloudName,
        uploadPreset,
        cropping: true,
        maxImageWidth: 250,
        maxImageFileSize: 2000000
    })

    const handleClickOutside = (e) => {
        if (!boxRef.current.contains(e.target)) {
            setOpenUserActions(false);
        }
    }

    const handleOpenInvitation = () => {
        setOpenInvitation(!openInvitation);
    };

    const updateSentStatus = () => {
        setIsSentRequest(true)
    };

    const handleCancelInvite = async () => {
        const invitation = await getInvitation(currAuthUser.id, userId);
        cancelInvitation(invitation._id);
      };

    const handleUnfriend = async () => {
        const invitation = await getInvitation(currAuthUser.id, userId);
        unfriend(currAuthUser.id, userId, invitation?._id);
    }

    const handleAcceptInvite = async () => {
    const invitation = await getInvitation(currAuthUser.id, userId);
    acceptInvitation(invitation._id);
    };

    useEffect(() => {
        document.addEventListener('click', handleClickOutside);

        return () => {
            document.removeEventListener('click', handleClickOutside);
        }
    }, [openUserActions])

    useEffect(() => {
        const fetchData = async () => {
            try {
                const response = await fetch("https://stuto-api.onrender.com/user/" + userId);
                const data = await response.json();
                if (response.status === 404 || response.status === 500 ) {
                    throw new Error("Error, status: ", data.message)
                }
                setUserData(data);
                setPublicId(data.avatar);
            } catch (error) {
                console.error("Error fetching user data")
            }
        }
        fetchData();
    },[userId])

    useEffect(() => {
        const fetchFriendsData = async () => {
            try {
                const response = await fetch("https://stuto-api.onrender.com/user/" + currAuthUser.id);
                const data = await response.json();
                if (response.status === 404 || response.status === 500 ) {
                    throw new Error("Error, status: ", data.message)
                }
                setFriends(data.friends);
            } catch (error) {
                console.error("Error fetching user data")
            }
        }
        fetchFriendsData();
    },[userId])

    useEffect(() => {
        const result = friends.find(friendId => friendId === userId)
        if (result) {
            setIsFriend(true);
        }
    }, [friends])

    useEffect(() => {
        const userAge = getAge(userData?.date_of_birth)
        setUserAge(userAge);
    },[userData])

    useEffect(() => {
        const getRequestSenders = async () => {
            try {
                const response = await fetch("https://stuto-api.onrender.com/invitation/" + currAuthUser.id)
                const data = await response.json();
                if (response.status === 200) {
                    let senders = data.reduce((result, item) => {
                        result.push(item.sender?._id);
                        return result;
                    },[]);
                    setRequestSenders(senders);
                }
            } catch (error) {
                console.error(error);
            }
        };
        const getRequestReceiver = async () => {
            try {
                const response = await fetch("https://stuto-api.onrender.com/invitation/sent/" + currAuthUser.id)       
                const data = await response.json();
                if (response.status === 200) {
                    let receivers = data.reduce((result, item) => {
                        result.push(item.receiver);
                        return result;
                    },[]);
                    setRequestReceivers(receivers);
                }
            } catch (error) {
                console.error(error);
            }
        };
        getRequestSenders();
        getRequestReceiver();
    },[currAuthUser.id])

    const renderActionBtn = () => {
        if (isFriend || isAccept) {
            return (
                <div 
                onClick={() => setOpenActions(!openActions)}
                className="w-fit h-9 flex justify-center items-center gap-2 font-medium text-sm px-6 bg-primaryColor rounded-full text-white transition-all hover:shadow-blockShadow hover:bg-primaryColor/80 cursor-pointer relative">
                    <FaUserCheck className="text-xl"/>
                    B·∫°n b√®

                    <ul
                    className={`absolute z-40 left-0 right-0 top-11 border border-gray-200 text-textColor shadow-md text-center rounded-md overflow-hidden
                    ${!openActions && "hidden"}`}
                    >
                        <li
                            onClick={(e) => {
                            handleUnfriend();
                            setIsFriend(false);
                            setIsAccept(false);
                            }}
                            className="px-4 py-2 bg-[#fcfcfc] hover:bg-[#e8e8e8]"
                        >
                            H·ªßy k·∫øt b·∫°n
                        </li>
                    </ul>
                </div>
            )
        } else {
            if (requestSenders.includes(userId) && !isResponse) {
                return (
                    <div 
                    onClick={() => {
                        setIsOpenResponse(!isOpenResponse);
                    }}
                    className="w-32 h-9 flex justify-center items-center gap-2 font-medium text-sm px-4 bg-primaryColor rounded-full text-white transition-all cursor-pointer relative
                    hover:shadow-blockShadow hover:bg-primaryColor/80">
                        <FaUserCheck className="text-xl"/>
                        Ph·∫£n h·ªìi

                        <ul
                        className={`absolute z-40 left-0 right-0 top-11 border border-gray-200 text-textColor shadow-md text-center rounded-md overflow-hidden
                                    ${!isOpenResponse && "hidden"}`}
                        >
                            <li
                                onClick={(e) => {
                                e.preventDefault();
                                setIsResponse(true);
                                setIsAccept(true);
                                handleAcceptInvite();
                                }}
                                className="px-4 py-2 bg-[#fcfcfc] hover:bg-[#e8e8e8]"
                            >
                                ƒê·ªìng √Ω
                            </li>
                            <li
                                onClick={(e) => {
                                e.preventDefault();
                                setIsResponse(true);
                                handleCancelInvite();
                                }}
                                className="px-4 py-2 bg-[#fcfcfc] hover:bg-[#e8e8e8]"
                            >
                                T·ª´ ch·ªëi
                            </li>
                        </ul>
                    </div>
                )
                } else if (requestReceivers.includes(userId) || isSentRequest) {
                    return (
                        <button 
                        onClick={async () => {
                            const invitation = await getInvitation(currAuthUser.id, userId)
                            cancelInvitation(invitation?._id)
                        }}
                        onClick={() => {
                            setIsSentRequest(false);
                            handleCancelInvite();
                        }}
                        className="w-fit h-9 flex justify-center items-center gap-2 font-medium text-sm px-4 bg-gray-400 rounded-full text-white transition-all hover:shadow-blockShadow hover:brightness-110">
                            <BsFillPersonXFill className="text-xl"/>
                            H·ªßy l·ªùi m·ªùi
                        </button>
                    )
                } else {
                    return (
                        <button 
                        onClick={() => {
                            handleOpenInvitation();
                            setInviteTarget(userData);
                        }}
                        className="w-32 h-9 flex justify-center items-center gap-2 font-medium text-sm px-4 bg-primaryColor rounded-full text-white transition-all hover:shadow-blockShadow hover:brightness-110">
                            <MdPersonAddAlt1 className="text-xl"/>
                            K·∫øt b·∫°n
                        </button>
                )
            }
        }
    }

    return (          
            <div className="ml-72 mr-[416px] mt-8 pb-12">
                <FriendsList />
                <div>
                    {/* Basic Info */}
                    <div className="bg-white rounded-3xl">
                        <div className="user-info-bgGradient py-8 px-12 flex items-end gap-8 rounded-t-3xl">
                            <div className="w-44 flex flex-col items-center">
                                <div className="shrink-0 w-40 h-40 relative">
                                    <AvatarImage publicId={publicId} cld={cld}/>
                                    {isCurrUser && (
                                        <UploadWidget 
                                        uwConfig={uwConfig}
                                        setPublicId={setPublicId} 
                                        className={"absolute right-0 bottom-2"}
                                        />
                                    )}
                                </div>
                                <p className="mt-6 flex gap-4 items-center font-medium">
                                    <FaMapPin />
                                    {userData?.location || "Ch∆∞a c·∫≠p nh·∫≠t"}
                                </p>
                                <p className="mt-1 text-sm font-medium">(12 l∆∞·ª£t ƒë·ªÅ xu·∫•t)</p>
                            </div>
                            <div className="grow">
                                <h1 className="text-3xl font-semibold flex flex-wrap items-end gap-1 lg">{userData?.name}{/* <span className="text-lg font-medium">(Bi·ªát danh)</span>*/}</h1>
                                <div className="flex items-end justify-between flex-wrap">
                                    <div className="mt-8 flex items-center gap-10">
                                        <div className="flex flex-col items-center gap-2">
                                            <p className="text-sm font-medium">S·ªë b·∫°n h·ªçc</p>
                                            <p className="font-semibold">16</p>
                                        </div>
                                        <div className="h-12 w-[2px] bg-textInactive/35 rounded"></div>
                                        <div className="flex flex-col items-center gap-2">
                                            <p className="text-sm font-medium">S·ªë gi·ªù ƒë√£ h·ªçc</p>
                                            <p className="font-semibold">12h 35m</p>
                                        </div>
                                    </div>
                                    <div className={`mt-4 gap-5 ${isCurrUser ? "hidden" : "flex"}`}>
                                        {renderActionBtn()}
                                        <div className="relative" ref={boxRef}>
                                            <button 
                                            onClick={(e) => setOpenUserActions(!openUserActions)}
                                            className="w-32 h-9 flex justify-center items-center gap-2 font-medium text-sm px-4 border-2 border-textInactive/70 rounded-full text-textInactive/80 transition-all hover:shadow-blockShadow hover:brightness-110 hover:bg-white/20 relative">
                                                <HiOutlineDotsHorizontal className="font-normal"/>
                                                Kh√°c
                                            </button>
                                            <ul 
                                            className={`box-w-arrow p-2 bg-white shadow-xl rounded-lg absolute top-12 -left-6 z-10
                                            ${openUserActions? "block": "hidden"}`}
                                            >
                                                <li className="px-1 py-2 w-60 flex items-center gap-2 font-medium hover:bg-[#D1C1FF]/35 cursor-pointer rounded-md">
                                                    <MdOutlineReport />B√°o c√°o t√†i kho·∫£n
                                                </li>
                                                <li className="px-1 py-2 w-60 flex items-center gap-2 font-medium hover:bg-[#D1C1FF]/35 cursor-pointer rounded-md">
                                                    <RiUserForbidLine />Ch·∫∑n ng∆∞·ªùi d√πng
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                    </div>

                    {/* About */}
                    <div className="mt-4 flex gap-3 h-48">
                        <div className="w-2/5 h-full bg-white rounded-3xl py-3 px-5">
                            <h3 className="font-semibold text-center text-lg">Ti·ªÉu s·ª≠</h3>
                            <p className="mt-2">‚Äúƒê√¢y l√† gi·ªõi thi·ªáu v·ªÅ tui, m·ªôt StuToer t√≠ch c·ª±c, h√≤a ƒë·ªìng, mu·ªën t√¨m nh·ªØng ng∆∞·ªùi b·∫°n m·ªõi h·ªçc c√πng ng√†nh C√¥ng ngh·ªá th√¥ng tin.‚Äù</p>
                        </div>
                        <div className="grow h-full bg-white rounded-3xl py-3 px-8 flex flex-col items-center">
                            <h3 className="font-semibold text-lg">Th√¥ng tin c∆° b·∫£n</h3>
                            <table className="mt-3 table-fixed">
                                <tbody>
                                    <tr>
                                        <td className="w-32">H·ªá ƒë√†o t·∫°o</td>
                                        <td className="w-6">:</td>
                                        <td className="font-medium">{userData?.study_program.toString() || "Ch∆∞a c·∫≠p nh·∫≠t"}</td>
                                    </tr>
                                    <tr>
                                        <td className="w-32">Chuy√™n ng√†nh</td>
                                        <td className="w-6">:</td>
                                        <td className="font-medium">{userData?.major?.name.toString() || "Ch∆∞a c·∫≠p nh·∫≠t"}</td>
                                    </tr>
                                    <tr>
                                        <td className="w-32">Gi·ªõi t√≠nh</td>
                                        <td className="w-6">:</td>
                                        <td className="font-medium">{userData?.sex.toString() || "Ch∆∞a c·∫≠p nh·∫≠t"}</td>
                                    </tr>
                                    <tr>
                                        <td className="w-32">Tu·ªïi</td>
                                        <td className="w-6">:</td>
                                        <td className="font-medium">{userAge.toString()}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    {/* Recommendation */}
                    <div className="mt-4 bg-white rounded-3xl pt-6 px-12 pb-4">
                        <h3 className="text-xl font-semibold">ƒê·ªÅ xu·∫•t t·ª´ StuToers kh√°c</h3>
                        <div className="my-3 flex items-start gap-6">
                            <div className="shrink-0">
                                <img src="https://kenh14cdn.com/thumb_w/660/2019/1/16/hoatran-7237-15476569125121111606547.jpg" alt="" className="w-14 h-14 rounded-full object-cover"/>
                            </div>
                            <div>
                                <h4 className="font-medium">Ph∆∞∆°ng Ly</h4>
                                <p className="mt-2 text-sm text-[#575757]">H√† N·ªôi, Khoa h·ªçc m√°y t√≠nh</p>
                                <p className="mt-1 text-sm text-[#575757]">ƒê√£ h·ªçc c√πng Ph√°c Th√°i Anh 16.8 gi·ªù</p>
                                <p className="mt-3">‚ÄúRos√© l√† m·ªôt ng∆∞·ªùi b·∫°n h·ªçc th·∫≠t tuy·ªát v·ªùi, b·∫°n √Ω r·∫•c th√¢n thi·ªán, cutee v√† s·∫µn s√†ng gi√∫p ƒë·ª° khi m√¨nh g·∫∑p ph·∫£i c√°c b√†i kh√¥ng t√¨m ƒë∆∞·ª£c h∆∞·ªõng gi·∫£i quy·∫øt. Tr·ªùi ∆°i ng∆∞·ªùi g√¨ v·ª´a xinh m√† v·ª´a h·ªçc gi·ªèi wa z·∫≠yyy üòç‚Äú</p>
                            </div>
                        </div>
                        <hr />
                        <div className="my-3 flex items-start gap-6">
                            <div className="shrink-0">
                                <img src="https://kenh14cdn.com/thumb_w/660/2019/1/16/hoatran-7237-15476569125121111606547.jpg" alt="" className="w-14 h-14 rounded-full object-cover"/>
                            </div>
                            <div>
                                <h4 className="font-medium">Ph∆∞∆°ng Ly</h4>
                                <p className="mt-2 text-sm text-[#575757]">H√† N·ªôi, Khoa h·ªçc m√°y t√≠nh</p>
                                <p className="mt-1 text-sm text-[#575757]">ƒê√£ h·ªçc c√πng Ph√°c Th√°i Anh 16.8 gi·ªù</p>
                                <p className="mt-3">‚ÄúRos√© l√† m·ªôt ng∆∞·ªùi b·∫°n h·ªçc th·∫≠t tuy·ªát v·ªùi, b·∫°n √Ω r·∫•c th√¢n thi·ªán, cutee v√† s·∫µn s√†ng gi√∫p ƒë·ª° khi m√¨nh g·∫∑p ph·∫£i c√°c b√†i kh√¥ng t√¨m ƒë∆∞·ª£c h∆∞·ªõng gi·∫£i quy·∫øt. Tr·ªùi ∆°i ng∆∞·ªùi g√¨ v·ª´a xinh m√† v·ª´a h·ªçc gi·ªèi wa z·∫≠yyy üòç‚Äú</p>
                            </div>
                        </div>
                        <div className="mt-6 text-textInactive flex items-center gap-2 cursor-pointer hover:underline justify-center">
                            <span>Xem th√™m c√°c ƒë·ªÅ xu·∫•t kh√°c</span> 
                            <FaArrowRight className="text-textInactive/70"/>
                        </div>
                    </div>
                    
                    {/* Invitation model */}
                    {openInvitation && (
                        <InvitationModal handleOpenInvitation={handleOpenInvitation} inviteTarget={inviteTarget} updateSentStatus={updateSentStatus}/>
                    )}

                    {/* Posts */}
                    <div className="mt-4 bg-white rounded-3xl pt-6 px-12 pb-4">
                        <h3 className="text-xl font-semibold">B√†i ƒëƒÉng c√° nh√¢n</h3>
                        <div className="">
                            <div className="mt-3 bg-[#FCFCFC]/70 border border-[#D6D6D6] rounded-xl min-h-72 relative pt-3 px-4 pb-2">
                                <div className="absolute top-3 right-4 cursor-pointer p-2 rounded-full hover:bg-gray-200">
                                    <BsThreeDots className="text-textInactive"/>
                                </div>
                                <div className="flex gap-3">
                                    <div className="w-14 h-14 rounded-full overflow-hidden">
                                        <img 
                                        src="https://cdn.tuoitre.vn/ttc/r/2021/01/07/thoi-diem-hien-tai-rose-da-so-huu-visual-dinh-cao-cua-kpop-1610033705.jpg" 
                                        alt="avatar" 
                                        className="w-full h-full object-cover"
                                        />
                                    </div>
                                    <div>
                                        <h4 className="mt-1 font-semibold">Ph√°c Th√°i Anh</h4>
                                        <div className="mt-1 flex gap-1 items-center">
                                            <p className="text-textInactive text-sm">1h</p>
                                            <BsDot className="text-textInactive"/>
                                            <FaEarthAsia className="text-[#888888] w-3" />
                                        </div>
                                    </div>
                                </div>
                                <h3 className="mt-3 font-medium">T√åM B·∫†N H·ªåC CHUNG L·∫¨P TR√åNH C++</h3>     
                                <p className="mt-6">M√¨nh m·ªõi tham gia v√†o kh√≥a h·ªçc L·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng C++ c·ªßa b√™n Coursera, mu·ªën t√¨m m·ªôt v√†i b·∫°n h·ªçc c√πng ƒë·ªÉ c√≥ ƒë·ªông l·ª±c h∆°n :>
                                B·∫°n n√†o h·ª©ng th√∫ hay c≈©ng ƒëang h·ªçc th√¨ nh·∫Øn tin cho m√¨nh nha üòò</p>                       
                                <div className="mt-11 w-full bg-[#D0D0D0] h-[1px] rounded"></div>
                                <div className="mt-4 flex items-center justify-between px-10 text-textInactive">
                                    <span className="grow flex gap-1 justify-center items-center font-medium px-1 py-2 rounded-lg cursor-pointer hover:bg-gray-200"><AiOutlineLike fontSize={20}/>Th√≠ch</span>
                                    <span className="grow flex gap-1 justify-center items-center font-medium px-1 py-2 rounded-lg cursor-pointer hover:bg-gray-200"><FaRegComment fontSize={18}/>B√¨nh lu·∫≠n</span>
                                    <span className="grow flex gap-1 justify-center items-center font-medium px-1 py-2 rounded-lg cursor-pointer hover:bg-gray-200"><FaRegPaperPlane fontSize={18}/>Nh·∫Øn tin</span>
                                </div>
                            </div>
                            <div className="mt-3 bg-[#FCFCFC]/70 border border-[#D6D6D6] rounded-xl min-h-72 relative pt-3 px-4 pb-2">
                                <div className="absolute top-3 right-4 cursor-pointer p-2 rounded-full hover:bg-gray-200">
                                    <BsThreeDots className="text-textInactive"/>
                                </div>
                                <div className="flex gap-3">
                                    <div className="w-14 h-14 rounded-full overflow-hidden">
                                        <img 
                                        src="https://cdn.tuoitre.vn/ttc/r/2021/01/07/thoi-diem-hien-tai-rose-da-so-huu-visual-dinh-cao-cua-kpop-1610033705.jpg" 
                                        alt="avatar" 
                                        className="w-full h-full object-cover"
                                        />
                                    </div>
                                    <div>
                                        <h4 className="mt-1 font-semibold">Ph√°c Th√°i Anh</h4>
                                        <div className="mt-1 flex gap-1 items-center">
                                            <p className="text-textInactive text-sm">1h</p>
                                            <BsDot className="text-textInactive"/>
                                            <FaEarthAsia className="text-[#888888] w-3" />
                                        </div>
                                    </div>
                                </div>
                                <h3 className="mt-3 font-medium">QUOTE TRUY·ªÄN C·∫¢M H·ª®NG</h3>     
                                <p className="mt-6">Kh√¥ng tr·ªìng c√¢y th√¨ s·∫Ω kh√¥ng c√≥ c∆° h·ªôi ƒë∆∞·ª£c n·∫±m d∆∞·ªõi b√≥ng r√¢m v√† th∆∞·ªüng th·ª©c tr√°i ng·ªçt. Kh√¥ng h·ªçc h√†nh chƒÉm ch·ªâ, n·ªó l·ª±c h·∫øt m√¨nh ngay t·ª´ h√¥m nay th√¨ c∆° h·ªôi ch·∫°m ƒë·∫øn th√†nh c√¥ng, ƒë·∫°t ƒë∆∞·ª£c ∆∞·ªõc m∆° c·ªßa b·∫°n s·∫Ω √≠t h∆°n ng∆∞·ªùi kh√°c.
                                <br />
                                H·ªçc kh√¥ng ph·∫£i l√† con ƒë∆∞·ªùng duy nh·∫•t d·∫´n ƒë·∫øn th√†nh c√¥ng nh∆∞ng n√≥ ƒë∆∞·ª£c xem l√† con ƒë∆∞·ªùng ng·∫Øn nh·∫•t, v·ªØng ch·∫Øc nh·∫•t. Ngay c·∫£ ng∆∞·ªùi th√†nh c√¥ng c≈©ng ph·∫£i h·ªçc h·ªèi kh√¥ng ng·ª´ng. V·∫≠y t·∫°i sao b·∫°n c·ª© m√£i tr√¨ ho√£n? H√£y ‚Äúl√™n tinh th·∫ßn‚Äù b·∫±ng top c√¢u n√≥i hay v·ªÅ h·ªçc t·∫≠p v√† th√†nh c√¥ng sau.</p>                       
                                <div className="mt-11 w-full bg-[#D0D0D0] h-[1px] rounded"></div>
                                <div className="mt-4 flex items-center justify-between px-10 text-textInactive">
                                    <span className="grow flex gap-1 justify-center items-center font-medium px-1 py-2 rounded-lg cursor-pointer hover:bg-gray-200"><AiOutlineLike fontSize={20}/>Th√≠ch</span>
                                    <span className="grow flex gap-1 justify-center items-center font-medium px-1 py-2 rounded-lg cursor-pointer hover:bg-gray-200"><FaRegComment fontSize={18}/>B√¨nh lu·∫≠n</span>
                                    <span className="grow flex gap-1 justify-center items-center font-medium px-1 py-2 rounded-lg cursor-pointer hover:bg-gray-200"><FaRegPaperPlane fontSize={18}/>Nh·∫Øn tin</span>
                                </div>
                            </div>
                        </div>
                        <div className="mt-6 text-textInactive flex items-center gap-2 cursor-pointer hover:underline justify-center">
                            <span>Xem th√™m c√°c b√†i ƒëƒÉng kh√°c</span> 
                            <FaArrowRight className="text-textInactive/70"/>
                        </div>
                    </div>

                    {/* Courses */}
                    <div className="mt-4 bg-white rounded-3xl pt-4 px-12 pb-10">
                        <div className="flex gap-3">
                            <button className="px-4 py-3 rounded-3xl font-semibold hover:shadow-md text-white bg-primaryColor">Kh√≥a h·ªçc ƒëang tham gia</button>
                            <button className="px-4 py-3 rounded-3xl font-semibold hover:shadow-md text-textInactive border border-[#ACACAC]">Kh√≥a h·ªçc quan t√¢m</button>
                        </div>
                        <div className="mt-10 w-full overflow-x-auto flex flex-nowrap justify-between gap-2 pb-4">
                            <div className="p-2 bg-boxBackground rounded-xl h-48 w-64 shadow-blockShadow hover:bg-primaryColor/70 hover:text-white transition-all">
                                <img src="https://images.unsplash.com/photo-1587620962725-abab7fe55159?q=80&w=1931&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" 
                                alt="" 
                                className="w-full h-[60%] object-cover rounded-lg"/>
                                <p className="mt-3 font-medium text-center truncate">L·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng C++</p>
                            </div>
                            <div className="p-2 bg-boxBackground rounded-xl h-48 w-64 shadow-blockShadow hover:bg-primaryColor/70 hover:text-white transition-all">
                                <img src="https://images.unsplash.com/photo-1587620962725-abab7fe55159?q=80&w=1931&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" 
                                alt="" 
                                className="w-full h-[60%] object-cover rounded-lg"/>
                                <p className="mt-3 font-medium text-center truncate">Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠</p>
                            </div>
                            <div className="p-2 bg-boxBackground rounded-xl h-48 w-64 shadow-blockShadow hover:bg-primaryColor/70 hover:text-white transition-all">
                                <img src="https://images.unsplash.com/photo-1587620962725-abab7fe55159?q=80&w=1931&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" 
                                alt="" 
                                className="w-full h-[60%] object-cover rounded-lg"/>
                                <p className="mt-3 font-medium text-center truncate">Ph√¢n t√≠ch d·ªØ li·ªáu</p>
                            </div>
                            <div className="p-2 bg-boxBackground rounded-xl h-48 w-64 shadow-blockShadow hover:bg-primaryColor/70 hover:text-white transition-all">
                                <img src="https://images.unsplash.com/photo-1587620962725-abab7fe55159?q=80&w=1931&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" 
                                alt="" 
                                className="w-full h-[60%] object-cover rounded-lg"/>
                                <p className="mt-3 font-medium text-center truncate">Ph√¢n t√≠ch v√† thi·∫øt k·∫ø h·ªá th·ªëng CNTT</p>
                            </div>
                        </div>
                    </div>

                    {/* Subjects */}
                    <div className="mt-4 bg-white rounded-3xl pt-4 px-12 pb-10">
                        <h3 className="text-xl font-semibold">C√°c m√¥n ƒë√£ h·ªçc</h3>
                        <ul className="mt-5 w-full">
                            <li className="py-3 px-4 mb-3 border border-gray-400 rounded-xl">1. L·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng</li>
                            <li className="py-3 px-4 mb-3 border border-gray-400 rounded-xl">2. Ph√¢n t√≠ch d·ªØ li√™u</li>
                            <li className="py-3 px-4 mb-3 border border-gray-400 rounded-xl">3. H·ªçc m√°y (Machine Learning)</li>
                        </ul>
                    </div>
                </div>
            </div>
)}

export default Profile;